{"version":3,"sources":["decode.js","HistoryList.js","LineItemList.js","PDFService.js","App.js","useLocalStorage.ts","index.js"],"names":["textArea","document","createElement","decode","encoded","innerHTML","value","HistoryList","_ref","historyStates","onHistoryStateClick","react_default","a","es","map","historyState","index","header","concat","invoiceNumber","toName","split","onClick","key","format","lineItems","reduce","prev","curr","quantity","rate","currency","LineItemList","event","this","props","onLineItemDescriptionChange","newDescription","target","onLineItemQuantityChange","newQuantity","onLineItemRateChange","newRate","onLineItemDeleteClick","sum","lineItem","sm","type","description","onChange","bind","style","paddingLeft","paddingRight","step","bsStyle","lineItemRows","renderLineItemRow","lineItemsTotal","getLineItemsTotal","onLineItemAddClick","Component","defaultProps","pdfMake","window","saveInvoicePDF","params","imageLogo","console","log","fileReader","FileReader","addEventListener","result","createPDFFromParams","readAsDataURL","docDefinition","notesAndTerms","buildNotesAndTerms","content","buildHeaderInformation","buildLineItemsTable","buildTotal","Object","toConsumableArray","buildDocDefinition","createPdf","open","optionalDataKeys","optionalDataValues","entries","Date","date","Payment Terms","paymentTerms","Due Date","dueDate","forEach","_ref2","slicedToArray","push","columns","stack","buildImageLogo","text","fromName","margin","fontSize","width","alignment","columnGap","String","toFixed","buildLineItem","table","widths","headerRows","body","layout","total","notes","terms","image","currencyCodes","keys","symbols","emptyState","App","_useState","useState","_useState2","editedInvoice","setEditedInvoice","_useLocalStorage","initialValue","arguments","length","undefined","_React$useState","React","JSON","parse","localStorage","getItem","err","setItem","stringify","_React$useState2","item","setValue","newValue","useLocalStorage","_useLocalStorage2","setHistoryStates","onFieldValueChange","propertyName","newVal","stateUpdate","objectSpread","className","horizontal","controlId","componentClass","ControlLabel","rows","placeholder","files","getElementById","defaultValue","currencyCode","src_LineItemList","splice","smOffset","dequal","slice","src_HistoryList","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.de1ff303.chunk.js","sourcesContent":["const textArea = document.createElement('textarea');\nexport default function(encoded) {\n  textArea.innerHTML = encoded;\n  return textArea.value;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { ListGroup, ListGroupItem } from 'react-bootstrap';\n\nimport { format } from 'currencyformatter.js';\nimport decode from './decode.js';\n\nfunction HistoryList({ historyStates, onHistoryStateClick }) {\n  return (\n    <ListGroup>\n      {historyStates.map((historyState, index) => (\n        <ListGroupItem\n          header={`${historyState.invoiceNumber} (${\n            (historyState.toName.split('\\n') || [''])[0]\n          })`}\n          onClick={() => onHistoryStateClick(historyState)}\n          key={`historyState${index}`}\n        >\n          {decode(\n            format(\n              historyState.lineItems.reduce(\n                (prev, curr) => prev + curr.quantity * curr.rate,\n                0,\n              ),\n              {\n                currency: historyState.currency,\n              },\n            ),\n          )}\n        </ListGroupItem>\n      ))}\n    </ListGroup>\n  );\n}\n\nHistoryList.propTypes = {\n  onHistoryClick: PropTypes.func,\n};\n\nexport default HistoryList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { Button, Row, Col, FormControl } from 'react-bootstrap';\n\nimport { format, symbols } from 'currencyformatter.js';\nimport decode from './decode.js';\n\nconst currencyCodes = Object.keys(symbols);\n\nclass LineItemList extends Component {\n  onLineItemDescriptionChange(index, event) {\n    this.props.onLineItemDescriptionChange({\n      index: index,\n      newDescription: event.target.value,\n    });\n  }\n\n  onLineItemQuantityChange(index, event) {\n    this.props.onLineItemQuantityChange({\n      index: index,\n      newQuantity: event.target.value,\n    });\n  }\n\n  onLineItemRateChange(index, event) {\n    this.props.onLineItemRateChange({\n      index: index,\n      newRate: event.target.value,\n    });\n  }\n\n  onLineItemDeleteClick(index) {\n    this.props.onLineItemDeleteClick({\n      index: index,\n    });\n  }\n\n  getLineItemsTotal(lineItems) {\n    return lineItems.reduce((sum, lineItem) => {\n      return sum + lineItem.quantity * lineItem.rate;\n    }, 0);\n  }\n\n  renderLineItemRow(lineItem, index) {\n    return (\n      <Row key={index}>\n        <Col sm={8}>\n          <FormControl\n            type=\"text\"\n            value={lineItem.description}\n            onChange={this.onLineItemDescriptionChange.bind(this, index)}\n          />\n        </Col>\n        <Col sm={1} style={{ paddingLeft: '7px', paddingRight: '7px' }}>\n          <FormControl\n            type=\"number\"\n            step=\"0.1\"\n            value={lineItem.quantity}\n            onChange={this.onLineItemQuantityChange.bind(this, index)}\n          />\n        </Col>\n        <Col sm={1} style={{ paddingLeft: '7px', paddingRight: '7px' }}>\n          <FormControl\n            type=\"number\"\n            value={lineItem.rate}\n            onChange={this.onLineItemRateChange.bind(this, index)}\n          />\n        </Col>\n        <Col sm={1}>\n          {decode(\n            format(lineItem.quantity * lineItem.rate, {\n              currency: this.props.currency\n            })\n          )}\n        </Col>\n        <Col sm={1}>\n          <Button\n            bsStyle=\"danger\"\n            onClick={this.onLineItemDeleteClick.bind(this, index)}\n          >\n            X\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n\n  render() {\n    let lineItems = this.props.lineItems;\n    let lineItemRows = lineItems.map(this.renderLineItemRow.bind(this));\n    let lineItemsTotal = this.getLineItemsTotal(lineItems);\n    return (\n      <div>\n        <Row>\n          <Col sm={8}>Item</Col>\n          <Col sm={1}>Quantity</Col>\n          <Col sm={1}>Rate</Col>\n          <Col sm={1}>Amount</Col>\n          <Col sm={1} />\n        </Row>\n        {lineItemRows}\n        <Row>\n          <Col sm={8}>\n            <Button bsStyle=\"success\" onClick={this.props.onLineItemAddClick}>\n              + Add Line Item\n            </Button>\n          </Col>\n          <Col sm={1} />\n          <Col sm={1}>Total</Col>\n          <Col sm={1}>\n            {decode(format(lineItemsTotal, { currency: this.props.currency }))}\n          </Col>\n          <Col sm={1} />\n        </Row>\n      </div>\n    );\n  }\n}\n\nLineItemList.propTypes = {\n  currency: PropTypes.oneOf(currencyCodes),\n  lineItems: PropTypes.array,\n  onLineItemDescriptionChange: PropTypes.func,\n  onLineItemQuantityChange: PropTypes.func,\n  onLineItemRateChange: PropTypes.func,\n  onLineItemDeleteClick: PropTypes.func,\n};\n\nLineItemList.defaultProps = {\n  lineItems: [],\n};\n\nexport default LineItemList;\n","const pdfMake = window.pdfMake;\n\nexport function saveInvoicePDF(params) {\n  if (params.imageLogo) {\n    console.log('imageLogo', params.imageLogo);\n    let fileReader = new FileReader();\n    fileReader.addEventListener(\n      'load',\n      onDataURLLoaded.bind(null, params, fileReader),\n      false,\n    );\n    fileReader.readAsDataURL(params.imageLogo);\n  } else {\n    createPDFFromParams(params);\n  }\n}\n\n// Private functions\nfunction onDataURLLoaded(params, fileReader) {\n  // Set imageLogo to data URI of file\n  params.imageLogo = fileReader.result;\n  createPDFFromParams(params);\n}\n\nfunction createPDFFromParams(params) {\n  let docDefinition = buildDocDefinition(params);\n  pdfMake.createPdf(docDefinition).open();\n}\n\nfunction buildDocDefinition(params) {\n  let notesAndTerms = buildNotesAndTerms(params);\n  console.log('notesAndTerms', notesAndTerms);\n  return {\n    content: [\n      buildHeaderInformation(params),\n      buildLineItemsTable(params),\n      buildTotal(params),\n      ...buildNotesAndTerms(params),\n    ],\n  };\n}\n\nfunction buildHeaderInformation(params) {\n  const optionalDataKeys = [];\n  const optionalDataValues = [];\n\n  Object.entries({\n    Date: params.date,\n    'Payment Terms': params.paymentTerms,\n    'Due Date': params.dueDate,\n  }).forEach(([key, value]) => {\n    if (value) {\n      optionalDataKeys.push(key);\n      optionalDataValues.push(value);\n    }\n  });\n\n  return {\n    columns: [\n      {\n        stack: [\n          ...buildImageLogo(params),\n          {\n            text: params.fromName,\n            margin: [0, 30, 0, 30],\n          },\n          {\n            text: 'Bill To',\n            margin: [0, 0, 0, 0],\n          },\n          {\n            text: params.toName,\n          },\n        ],\n      },\n      {\n        stack: [\n          {\n            text: 'INVOICE',\n            fontSize: 25,\n          },\n          {\n            text: `# ${params.invoiceNumber}`,\n            fontSize: 15,\n            margin: [0, 0, 0, 30],\n          },\n          {\n            columns: [\n              {\n                width: 50,\n                text: '',\n              },\n              {\n                width: '*',\n                columns: [\n                  {\n                    stack: optionalDataKeys,\n                    alignment: 'right',\n                  },\n                  {\n                    stack: optionalDataValues,\n                    alignment: 'right',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        alignment: 'right',\n      },\n    ],\n    // optional space between columns\n    columnGap: 10,\n    margin: [0, 0, 0, 30],\n  };\n}\n\nfunction buildLineItemsTable(params) {\n  let lineItemRows = params.lineItems.map(buildLineItem(params));\n  return {\n    table: {\n      widths: ['*', '11%', '11%', '18%'],\n      headerRows: 1,\n      body: [\n        [\n          'Item',\n          { text: 'Quantity', alignment: 'right' },\n          { text: 'Rate', alignment: 'right' },\n          { text: 'Amount', alignment: 'right' },\n        ],\n        ...lineItemRows,\n      ],\n    },\n    layout: 'lightHorizontalLines',\n  };\n}\n\nfunction buildTotal(params) {\n  let total = params.lineItems.reduce((sum, lineItem) => {\n    return sum + lineItem.quantity * lineItem.rate;\n  }, 0);\n  return {\n    table: {\n      widths: ['*', '18%'],\n      body: [\n        [\n          {\n            text: 'Total',\n            alignment: 'right',\n          },\n          {\n            text: `${total.toFixed(2)} ${params.currency}`,\n            alignment: 'right',\n          },\n        ],\n      ],\n    },\n    layout: 'noBorders',\n    margin: [0, 0, 0, 30],\n  };\n}\n\n// Returns an array\nfunction buildNotesAndTerms(params) {\n  let result = [];\n  console.log('params', params);\n  if (params.notes) {\n    result = result.concat([\n      { text: 'Notes' },\n      { text: params.notes, margin: [0, 0, 0, 30] },\n    ]);\n  }\n  if (params.terms) {\n    result = result.concat([\n      { text: 'Terms' },\n      { text: params.terms, margin: [0, 0, 0, 30] },\n    ]);\n  }\n  return result;\n}\n\nfunction buildLineItem(params) {\n  return function buildLineItemCurried(lineItem) {\n    return [\n      lineItem.description,\n      { text: String(lineItem.quantity), alignment: 'right' },\n      { text: `${lineItem.rate} ${params.currency}`, alignment: 'right' },\n      {\n        text: `${(lineItem.quantity * lineItem.rate).toFixed(2)} ${\n          params.currency\n        }`,\n        alignment: 'right',\n      },\n    ];\n  };\n}\n\nfunction buildImageLogo(params) {\n  let result = [];\n  if (params.imageLogo) {\n    result.push({\n      image: params.imageLogo,\n    });\n  }\n  return result;\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  PageHeader,\n} from 'react-bootstrap';\nimport { symbols } from 'currencyformatter.js';\nimport dequal from 'dequal';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './App.css';\nimport HistoryList from './HistoryList';\nimport LineItemList from './LineItemList.js';\nimport { saveInvoicePDF } from './PDFService.js';\nimport useLocalStorage from './useLocalStorage.ts';\n\nconst currencyCodes = Object.keys(symbols);\n\nconst emptyState = {\n  invoiceNumber: '',\n  fromName: '',\n  imageLogo: null,\n  paymentTerms: '',\n  currency: 'CAD',\n  toName: '',\n  date: '',\n  dueDate: '',\n  lineItems: [],\n  notes: '',\n  terms: '',\n};\n\nfunction App() {\n  const [editedInvoice, setEditedInvoice] = useState(emptyState);\n  const [historyStates, setHistoryStates] = useLocalStorage(\n    'invoiceHistory',\n    [],\n  );\n\n  function onFieldValueChange(propertyName, event) {\n    let newVal = event.target.value;\n    let stateUpdate = {};\n    stateUpdate[propertyName] = newVal;\n    setEditedInvoice({\n      ...editedInvoice,\n      ...stateUpdate,\n    });\n  }\n\n  function onImageLogoChange(event) {\n    let files = event.target.files;\n    let stateUpdate = {};\n    if (files.length > 0) {\n      stateUpdate.imageLogo = files[0];\n    }\n    setEditedInvoice({ ...editedInvoice, ...stateUpdate });\n  }\n\n  function onLineItemDescriptionChange(params) {\n    let lineItems = editedInvoice.lineItems;\n    let lineItem = lineItems[params.index];\n    lineItem.description = params.newDescription;\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemQuantityChange(params) {\n    let lineItems = editedInvoice.lineItems;\n    let lineItem = lineItems[params.index];\n    lineItem.quantity = params.newQuantity;\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemRateChange(params) {\n    let lineItems = editedInvoice.lineItems;\n    let lineItem = lineItems[params.index];\n    lineItem.rate = params.newRate;\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemDeleteClick(params) {\n    let lineItems = editedInvoice.lineItems;\n    lineItems.splice(params.index, 1);\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemAddClick() {\n    let lineItems = editedInvoice.lineItems;\n    lineItems.push({\n      description: '',\n      quantity: 0,\n      rate: 0,\n    });\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onExampleLinkClick() {\n    setEditedInvoice({\n      ...editedInvoice,\n      invoiceNumber: '123',\n      fromName: 'John Smith\\n123 Address St.\\nLos Angeles, CA 12345',\n      imageLogo: null,\n      paymentTerms: 'Biweekly',\n      currency: 'USD',\n      toName: 'Jane Smith\\n999 Address St.\\nSeattle, WA 54321',\n      date: '2016-10-10',\n      dueDate: '2016-11-01',\n      lineItems: [\n        {\n          description: 'Item #1',\n          quantity: 1,\n          rate: 1.5,\n        },\n        {\n          description: 'Item #2',\n          quantity: 2,\n          rate: 2.5,\n        },\n      ],\n      notes: 'This invoice does not include service fees.',\n      terms: 'Payment must be made via PayPal.',\n    });\n  }\n\n  function onClearFormClick() {\n    setEditedInvoice(emptyState);\n  }\n\n  function onRemoveImageClick() {\n    // Clear out the input file element\n    let inputElem = document.getElementById('imageLogo');\n    inputElem.value = '';\n\n    // Clear out the imageLogo on the state\n    setEditedInvoice({\n      ...editedInvoice,\n      imageLogo: null,\n    });\n  }\n\n  function onSubmitClick() {\n    saveInvoicePDF(editedInvoice);\n    if (!dequal(editedInvoice, historyStates[0])) {\n      setHistoryStates([editedInvoice, ...historyStates.slice(0, 24)]);\n    }\n  }\n\n  function onHistoryStateClick(historyState) {\n    setEditedInvoice(historyState);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        <PageHeader>Invoice Generator</PageHeader>\n        <p>\n          This is an invoice generator. Fill in the fields below and click\n          'Create Invoice' to generate the invoice as a PDF document.{' '}\n          <button onClick={onExampleLinkClick}>Click here</button> to see an\n          example.\n        </p>\n        <div className=\"App-invoice\">\n          <Form horizontal>\n            <FormGroup controlId=\"invoiceNumber\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Invoice #\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  type=\"text\"\n                  value={editedInvoice.invoiceNumber}\n                  onChange={onFieldValueChange.bind(this, 'invoiceNumber')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"fromName\">\n              <Col componentClass={ControlLabel} sm={2}>\n                From\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  componentClass=\"textarea\"\n                  rows=\"3\"\n                  placeholder=\"Who is this invoice from?\"\n                  value={editedInvoice.fromName}\n                  onChange={onFieldValueChange.bind(this, 'fromName')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"imageLogo\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Logo\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  type=\"file\"\n                  onChange={onImageLogoChange.bind(this)}\n                />\n                {editedInvoice.imageLogo ? (\n                  <button onClick={onRemoveImageClick}>Remove image</button>\n                ) : null}\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"toName\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Bill To\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  componentClass=\"textarea\"\n                  rows=\"3\"\n                  placeholder=\"Who is this invoice to?\"\n                  value={editedInvoice.toName}\n                  onChange={onFieldValueChange.bind(this, 'toName')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"date\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Date\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  type=\"date\"\n                  value={editedInvoice.date}\n                  onChange={onFieldValueChange.bind(this, 'date')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"dueDate\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Due Date\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  type=\"date\"\n                  value={editedInvoice.dueDate}\n                  onChange={onFieldValueChange.bind(this, 'dueDate')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"paymentTerms\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Payment Terms\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  type=\"text\"\n                  value={editedInvoice.paymentTerms}\n                  onChange={onFieldValueChange.bind(this, 'paymentTerms')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"currency\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Currency\n              </Col>\n              <Col sm={10}>\n                <FormControl\n                  componentClass=\"select\"\n                  placeholder=\"Select currency\"\n                  defaultValue={editedInvoice.currency}\n                  onChange={onFieldValueChange.bind(this, 'currency')}\n                >\n                  {currencyCodes.map((currencyCode, index) => (\n                    <option value={currencyCode} key={index}>\n                      {currencyCode}\n                    </option>\n                  ))}\n                </FormControl>\n              </Col>\n            </FormGroup>\n            <LineItemList\n              lineItems={editedInvoice.lineItems}\n              currency={editedInvoice.currency}\n              onLineItemDescriptionChange={onLineItemDescriptionChange}\n              onLineItemQuantityChange={onLineItemQuantityChange}\n              onLineItemRateChange={onLineItemRateChange}\n              onLineItemDeleteClick={onLineItemDeleteClick}\n              onLineItemAddClick={onLineItemAddClick}\n            />\n            <FormGroup>\n              <ControlLabel>Notes</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                placeholder=\"Notes - any relevant information not already covered\"\n                value={editedInvoice.notes}\n                onChange={onFieldValueChange.bind(this, 'notes')}\n              />\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>Terms</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                placeholder=\"Terms and conditions - late fees, payment methods, delivery schedule\"\n                value={editedInvoice.terms}\n                onChange={onFieldValueChange.bind(this, 'terms')}\n              />\n            </FormGroup>\n          </Form>\n        </div>\n        <div className=\"Footer-Container\">\n          <div className=\"Footer\">\n            <Col sm={2}>\n              <Button onClick={onClearFormClick}>Clear Form</Button>\n            </Col>\n            <Col smOffset={8} sm={2}>\n              <Button onClick={onSubmitClick} bsStyle=\"primary\">\n                Create Invoice\n              </Button>\n            </Col>\n          </div>\n        </div>\n      </div>\n      <div>\n        <HistoryList\n          historyStates={historyStates}\n          onHistoryStateClick={onHistoryStateClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// From https://github.com/dance2die/react-use-localstorage\nimport React from 'react';\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string = '',\n): [string, any] {\n  const [item, setValue] = React.useState(() => {\n    let value;\n\n    // Try to parse the value and fall back to value\n    try {\n      value = JSON.parse(localStorage.getItem(key) || '');\n    } catch (err) {\n      value = localStorage.getItem(key);\n    }\n\n    value = value || initialValue;\n    localStorage.setItem(\n      key,\n      typeof value === 'string' ? value : JSON.stringify(value),\n    );\n    return value;\n  });\n\n  const setItem = (newValue: any) => {\n    setValue(newValue);\n    localStorage.setItem(\n      key,\n      typeof newValue === 'string' ? newValue : JSON.stringify(newValue),\n    );\n  };\n\n  return [item, setItem];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}