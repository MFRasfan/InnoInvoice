{"version":3,"sources":["decode.js","LineItemList.js","PDFService.js","App.js","useLocalStorage.ts","index.js"],"names":["textArea","document","createElement","decode","encoded","innerHTML","value","LineItemList","index","event","this","props","onLineItemDescriptionChange","newDescription","target","onLineItemQuantityChange","newQuantity","onLineItemRateChange","newRate","onLineItemDeleteClick","lineItems","reduce","sum","lineItem","quantity","rate","react_default","a","es","key","sm","type","description","onChange","bind","style","paddingLeft","paddingRight","step","format","currency","bsStyle","onClick","lineItemRows","map","renderLineItemRow","lineItemsTotal","getLineItemsTotal","onLineItemAddClick","Component","defaultProps","pdfMake","window","saveInvoicePDF","params","imageLogo","console","log","fileReader","FileReader","addEventListener","result","createPDFFromParams","readAsDataURL","docDefinition","notesAndTerms","buildNotesAndTerms","content","buildHeaderInformation","buildLineItemsTable","buildTotal","concat","Object","toConsumableArray","buildDocDefinition","createPdf","open","optionalDataKeys","optionalDataValues","entries","Date","date","Payment Terms","paymentTerms","Due Date","dueDate","forEach","_ref","_ref2","slicedToArray","push","columns","stack","buildImageLogo","text","fromName","margin","toName","fontSize","invoiceNumber","width","alignment","columnGap","String","toFixed","buildLineItem","table","widths","headerRows","body","layout","total","notes","terms","image","currencyCodes","keys","symbols","emptyState","App","_useState","useState","_useState2","editedInvoice","setEditedInvoice","_useLocalStorage","initialValue","arguments","length","undefined","_React$useState","React","JSON","parse","localStorage","getItem","err","setItem","stringify","_React$useState2","item","setValue","newValue","useLocalStorage","_useLocalStorage2","historyStates","setHistoryStates","onFieldValueChange","propertyName","newVal","stateUpdate","objectSpread","className","horizontal","controlId","componentClass","ControlLabel","rows","placeholder","defaultValue","currencyCode","src_LineItemList","splice","smOffset","dequal","slice","ReactDOM","render","src_App","getElementById"],"mappings":"kUAAMA,EAAWC,SAASC,cAAc,YACzBC,EAAA,SAASC,GAEtB,OADAJ,EAASK,UAAYD,EACdJ,EAASM,OCSZC,sMACwBC,EAAOC,GACjCC,KAAKC,MAAMC,4BAA4B,CACrCJ,MAAOA,EACPK,eAAgBJ,EAAMK,OAAOR,yDAIRE,EAAOC,GAC9BC,KAAKC,MAAMI,yBAAyB,CAClCP,MAAOA,EACPQ,YAAaP,EAAMK,OAAOR,qDAITE,EAAOC,GAC1BC,KAAKC,MAAMM,qBAAqB,CAC9BT,MAAOA,EACPU,QAAST,EAAMK,OAAOR,sDAIJE,GACpBE,KAAKC,MAAMQ,sBAAsB,CAC/BX,MAAOA,8CAIOY,GAChB,OAAOA,EAAUC,OAAO,SAACC,EAAKC,GAC5B,OAAOD,EAAMC,EAASC,SAAWD,EAASE,MACzC,6CAGaF,EAAUf,GAC1B,OACEkB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKC,IAAKrB,GACRkB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACEG,KAAK,OACLzB,MAAOiB,EAASS,YAChBC,SAAUvB,KAAKE,4BAA4BsB,KAAKxB,KAAMF,MAG1DkB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,EAAGK,MAAO,CAAEC,YAAa,MAAOC,aAAc,QACrDX,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACEG,KAAK,SACLO,KAAK,MACLhC,MAAOiB,EAASC,SAChBS,SAAUvB,KAAKK,yBAAyBmB,KAAKxB,KAAMF,MAGvDkB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,EAAGK,MAAO,CAAEC,YAAa,MAAOC,aAAc,QACrDX,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACEG,KAAK,SACLzB,MAAOiB,EAASE,KAChBQ,SAAUvB,KAAKO,qBAAqBiB,KAAKxB,KAAMF,MAGnDkB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACN3B,EACCoC,iBAAOhB,EAASC,SAAWD,EAASE,KAAM,CACxCe,SAAU9B,KAAKC,MAAM6B,aAI3Bd,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACEa,QAAQ,SACRC,QAAShC,KAAKS,sBAAsBe,KAAKxB,KAAMF,IAFjD,wCAYN,IAAIY,EAAYV,KAAKC,MAAMS,UACvBuB,EAAevB,EAAUwB,IAAIlC,KAAKmC,kBAAkBX,KAAKxB,OACzDoC,EAAiBpC,KAAKqC,kBAAkB3B,GAC5C,OACEM,EAAAC,EAAAzB,cAAA,WACEwB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,KACEF,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GAAT,QACAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GAAT,YACAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GAAT,QACAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GAAT,UACAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,KAEVa,EACDjB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,KACEF,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAQa,QAAQ,UAAUC,QAAShC,KAAKC,MAAMqC,oBAA9C,oBAIFtB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,IACTJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GAAT,SACAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACN3B,EAAOoC,iBAAOO,EAAgB,CAAEN,SAAU9B,KAAKC,MAAM6B,aAExDd,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,aAvGQmB,aAuH3B1C,EAAa2C,aAAe,CAC1B9B,UAAW,IAGEb,QCvIT4C,EAAUC,OAAOD,QAEhB,SAASE,EAAeC,GAC7B,GAAIA,EAAOC,UAAW,CACpBC,QAAQC,IAAI,YAAaH,EAAOC,WAChC,IAAIG,EAAa,IAAIC,WACrBD,EAAWE,iBACT,OAWN,SAAyBN,EAAQI,GAE/BJ,EAAOC,UAAYG,EAAWG,OAC9BC,EAAoBR,IAbApB,KAAK,KAAMoB,EAAQI,IACnC,GAEFA,EAAWK,cAAcT,EAAOC,gBAEhCO,EAAoBR,GAWxB,SAASQ,EAAoBR,GAC3B,IAAIU,EAIN,SAA4BV,GAC1B,IAAIW,EAAgBC,EAAmBZ,GAEvC,OADAE,QAAQC,IAAI,gBAAiBQ,GACtB,CACLE,QAAO,CACLC,EAAuBd,GACvBe,EAAoBf,GACpBgB,EAAWhB,IAHNiB,OAAAC,OAAAC,EAAA,EAAAD,CAIFN,EAAmBZ,MAZNoB,CAAmBpB,GACvCH,EAAQwB,UAAUX,GAAeY,OAgBnC,SAASR,EAAuBd,GAC9B,IAAMuB,EAAmB,GACnBC,EAAqB,GAa3B,OAXAN,OAAOO,QAAQ,CACbC,KAAM1B,EAAO2B,KACbC,gBAAiB5B,EAAO6B,aACxBC,WAAY9B,EAAO+B,UAClBC,QAAQ,SAAAC,GAAkB,IAAAC,EAAAhB,OAAAiB,EAAA,EAAAjB,CAAAe,EAAA,GAAhB1D,EAAgB2D,EAAA,GAAXlF,EAAWkF,EAAA,GACvBlF,IACFuE,EAAiBa,KAAK7D,GACtBiD,EAAmBY,KAAKpF,MAIrB,CACLqF,QAAS,CACP,CACEC,MAAK,GAAArB,OAAAC,OAAAC,EAAA,EAAAD,CACAqB,EAAevC,IADf,CAEH,CACEwC,KAAMxC,EAAOyC,SACbC,OAAQ,CAAC,EAAG,GAAI,EAAG,KAErB,CACEF,KAAM,UACNE,OAAQ,CAAC,EAAG,EAAG,EAAG,IAEpB,CACEF,KAAMxC,EAAO2C,WAInB,CACEL,MAAO,CACL,CACEE,KAAM,UACNI,SAAU,IAEZ,CACEJ,KAAI,KAAAvB,OAAOjB,EAAO6C,eAClBD,SAAU,GACVF,OAAQ,CAAC,EAAG,EAAG,EAAG,KAEpB,CACEL,QAAS,CACP,CACES,MAAO,GACPN,KAAM,IAER,CACEM,MAAO,IACPT,QAAS,CACP,CACEC,MAAOf,EACPwB,UAAW,SAEb,CACET,MAAOd,EACPuB,UAAW,cAOvBA,UAAW,UAIfC,UAAW,GACXN,OAAQ,CAAC,EAAG,EAAG,EAAG,KAItB,SAAS3B,EAAoBf,GAC3B,IAAIX,EAAeW,EAAOlC,UAAUwB,IA+DtC,SAAuBU,GACrB,OAAO,SAA8B/B,GACnC,MAAO,CACLA,EAASS,YACT,CAAE8D,KAAMS,OAAOhF,EAASC,UAAW6E,UAAW,SAC9C,CAAEP,KAAI,GAAAvB,OAAKhD,EAASE,KAAd,KAAA8C,OAAsBjB,EAAOd,UAAY6D,UAAW,SAC1D,CACEP,KAAI,GAAAvB,QAAMhD,EAASC,SAAWD,EAASE,MAAM+E,QAAQ,GAAjD,KAAAjC,OACFjB,EAAOd,UAET6D,UAAW,WAzEuBI,CAAcnD,IACtD,MAAO,CACLoD,MAAO,CACLC,OAAQ,CAAC,IAAK,MAAO,MAAO,OAC5BC,WAAY,EACZC,KAAI,CACF,CACE,OACA,CAAEf,KAAM,WAAYO,UAAW,SAC/B,CAAEP,KAAM,OAAQO,UAAW,SAC3B,CAAEP,KAAM,SAAUO,UAAW,WAL7B9B,OAAAC,OAAAC,EAAA,EAAAD,CAOC7B,KAGPmE,OAAQ,wBAIZ,SAASxC,EAAWhB,GAClB,IAAIyD,EAAQzD,EAAOlC,UAAUC,OAAO,SAACC,EAAKC,GACxC,OAAOD,EAAMC,EAASC,SAAWD,EAASE,MACzC,GACH,MAAO,CACLiF,MAAO,CACLC,OAAQ,CAAC,IAAK,OACdE,KAAM,CACJ,CACE,CACEf,KAAM,QACNO,UAAW,SAEb,CACEP,KAAI,GAAAvB,OAAKwC,EAAMP,QAAQ,GAAnB,KAAAjC,OAAyBjB,EAAOd,UACpC6D,UAAW,YAKnBS,OAAQ,YACRd,OAAQ,CAAC,EAAG,EAAG,EAAG,KAKtB,SAAS9B,EAAmBZ,GAC1B,IAAIO,EAAS,GAcb,OAbAL,QAAQC,IAAI,SAAUH,GAClBA,EAAO0D,QACTnD,EAASA,EAAOU,OAAO,CACrB,CAAEuB,KAAM,SACR,CAAEA,KAAMxC,EAAO0D,MAAOhB,OAAQ,CAAC,EAAG,EAAG,EAAG,QAGxC1C,EAAO2D,QACTpD,EAASA,EAAOU,OAAO,CACrB,CAAEuB,KAAM,SACR,CAAEA,KAAMxC,EAAO2D,MAAOjB,OAAQ,CAAC,EAAG,EAAG,EAAG,QAGrCnC,EAmBT,SAASgC,EAAevC,GACtB,IAAIO,EAAS,GAMb,OALIP,EAAOC,WACTM,EAAO6B,KAAK,CACVwB,MAAO5D,EAAOC,YAGXM,ECzLT,IAAMsD,EAAgB3C,OAAO4C,KAAKC,WAE5BC,EAAa,CACjBnB,cAAe,GACfJ,SAAU,GAGVvD,SAAU,MACVyD,OAAQ,GACRhB,KAAM,GAEN7D,UAAW,GACX4F,MAAO,GACPC,MAAO,IAqOMM,MAlOf,WAAe,IAAAC,EAC6BC,mBAASH,GADtCI,EAAAlD,OAAAiB,EAAA,EAAAjB,CAAAgD,EAAA,GACNG,EADMD,EAAA,GACSE,EADTF,EAAA,GAAAG,EChCA,SACbhG,GAEe,IADfiG,EACeC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GADQ,GACRG,EACUC,IAAMV,SAAS,WACtC,IAAInH,EAGJ,IACEA,EAAQ8H,KAAKC,MAAMC,aAAaC,QAAQ1G,IAAQ,IAChD,MAAO2G,GACPlI,EAAQgI,aAAaC,QAAQ1G,GAQ/B,OALAvB,EAAQA,GAASwH,EACjBQ,aAAaG,QACX5G,EACiB,kBAAVvB,EAAqBA,EAAQ8H,KAAKM,UAAUpI,IAE9CA,IAhBMqI,EAAAnE,OAAAiB,EAAA,EAAAjB,CAAA0D,EAAA,GACRU,EADQD,EAAA,GACFE,EADEF,EAAA,GA2Bf,MAAO,CAACC,EARQ,SAACE,GACfD,EAASC,GACTR,aAAaG,QACX5G,EACoB,kBAAbiH,EAAwBA,EAAWV,KAAKM,UAAUI,MDQnBC,CACxC,iBACA,IAJWC,EAAAxE,OAAAiB,EAAA,EAAAjB,CAAAqD,EAAA,GAENoB,EAFMD,EAAA,GAESE,EAFTF,EAAA,GAOb,SAASG,EAAmBC,EAAc3I,GACxC,IAAI4I,EAAS5I,EAAMK,OAAOR,MACtBgJ,EAAc,GAClBA,EAAYF,GAAgBC,EAC5BzB,EAAiBpD,OAAA+E,EAAA,EAAA/E,CAAA,GACZmD,EACA2B,IAmEP,OAEE5H,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,OACb9H,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,aACb9H,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,OACf9H,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,gBACAF,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,sBACb9H,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAM6H,YAAU,GACd/H,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAW8H,UAAU,iBACnBhI,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAK+H,eAAgBC,IAAc9H,GAAI,GAAvC,aAGAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACEG,KAAK,OACLzB,MAAOqH,EAAcxB,cACrBlE,SAAUkH,EAAmBjH,KAAKxB,KAAM,qBAI9CgB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAW8H,UAAU,YACnBhI,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAK+H,eAAgBC,IAAc9H,GAAI,GAAvC,UAGAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACE+H,eAAe,WACfE,KAAK,IACLC,YAAY,4BACZxJ,MAAOqH,EAAc5B,SACrB9D,SAAUkH,EAAmBjH,KAAKxB,KAAM,gBAI9CgB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAW8H,UAAU,UACnBhI,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAK+H,eAAgBC,IAAc9H,GAAI,GAAvC,oBAGAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACE+H,eAAe,WACfE,KAAK,IACLC,YAAY,0BACZxJ,MAAOqH,EAAc1B,OACrBhE,SAAUkH,EAAmBjH,KAAKxB,KAAM,cAI9CgB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAW8H,UAAU,QACnBhI,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAK+H,eAAgBC,IAAc9H,GAAI,GAAvC,gBAGAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACEG,KAAK,OACLzB,MAAOqH,EAAc1C,KACrBhD,SAAUkH,EAAmBjH,KAAKxB,KAAM,YAI9CgB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAW8H,UAAU,WACnBhI,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAK+H,eAAgBC,IAAc9H,GAAI,GAAvC,cAGAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACEG,KAAK,OACLzB,MAAOqH,EAActC,QACrBpD,SAAUkH,EAAmBjH,KAAKxB,KAAM,eAI9CgB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAW8H,UAAU,YACnBhI,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAK+H,eAAgBC,IAAc9H,GAAI,GAAvC,YAGAJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACE+H,eAAe,SACfG,YAAY,kBACZC,aAAcpC,EAAcnF,SAC5BP,SAAUkH,EAAmBjH,KAAKxB,KAAM,aAEvCyG,EAAcvE,IAAI,SAACoH,EAAcxJ,GAAf,OACjBkB,EAAAC,EAAAzB,cAAA,UAAQI,MAAO0J,EAAcnI,IAAKrB,GAC/BwJ,UAQftI,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,OACX9H,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,OACf9H,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAM6H,YAAU,GAChB/H,EAAAC,EAAAzB,cAAC+J,EAAD,CACE7I,UAAWuG,EAAcvG,UACzBoB,SAAUmF,EAAcnF,SACxB5B,4BAnKZ,SAAqC0C,GACnC,IAAIlC,EAAYuG,EAAcvG,UACfA,EAAUkC,EAAO9C,OACvBwB,YAAcsB,EAAOzC,eAC9B+G,EAAiBpD,OAAA+E,EAAA,EAAA/E,CAAA,GACZmD,EADW,CAEdvG,UAAWA,MA8JHL,yBA1JZ,SAAkCuC,GAChC,IAAIlC,EAAYuG,EAAcvG,UACfA,EAAUkC,EAAO9C,OACvBgB,SAAW8B,EAAOtC,YAC3B4G,EAAiBpD,OAAA+E,EAAA,EAAA/E,CAAA,GACZmD,EADW,CAEdvG,UAAWA,MAqJHH,qBAjJZ,SAA8BqC,GAC5B,IAAIlC,EAAYuG,EAAcvG,UACfA,EAAUkC,EAAO9C,OACvBiB,KAAO6B,EAAOpC,QACvB0G,EAAiBpD,OAAA+E,EAAA,EAAA/E,CAAA,GACZmD,EADW,CAEdvG,UAAWA,MA4IHD,sBAxIZ,SAA+BmC,GAC7B,IAAIlC,EAAYuG,EAAcvG,UAC9BA,EAAU8I,OAAO5G,EAAO9C,MAAO,GAC/BoH,EAAiBpD,OAAA+E,EAAA,EAAA/E,CAAA,GACZmD,EADW,CAEdvG,UAAWA,MAoIH4B,mBAhIZ,WACE,IAAI5B,EAAYuG,EAAcvG,UAC9BA,EAAUsE,KAAK,CACb1D,YAAa,GACbR,SAAU,EACVC,KAAM,IAERmG,EAAiBpD,OAAA+E,EAAA,EAAA/E,CAAA,GACZmD,EADW,CAEdvG,UAAWA,QA2HLM,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,KACEF,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,cACAF,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACE+H,eAAe,WACfG,YAAY,uDACZxJ,MAAOqH,EAAcX,MACrB/E,SAAUkH,EAAmBjH,KAAKxB,KAAM,YAG5CgB,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,KACEF,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,cACAF,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CACE+H,eAAe,WACfG,YAAY,uEACZxJ,MAAOqH,EAAcV,MACrBhF,SAAUkH,EAAmBjH,KAAKxB,KAAM,gBAOhDgB,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,oBACb9H,EAAAC,EAAAzB,cAAA,OAAKsJ,UAAU,UACb9H,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKE,GAAI,GACPJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAQc,QA/IpB,WACEkF,EAAiBN,KA8IP,eAEF5F,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAKuI,SAAU,EAAGrI,GAAI,GACpBJ,EAAAC,EAAAzB,cAAC0B,EAAA,EAAD,CAAQc,QA7IpB,WACEW,EAAesE,GACVyC,YAAOzC,EAAesB,EAAc,KACvCC,EAAgB,CAAEvB,GAAFpD,OAAAC,OAAAC,EAAA,EAAAD,CAAoByE,EAAcoB,MAAM,EAAG,QA0InB5H,QAAQ,WAAxC,+BErPd6H,IAASC,OACP7I,EAAAC,EAAAzB,cAACsK,EAAD,MACAvK,SAASwK,eAAe","file":"static/js/main.2c4ab350.chunk.js","sourcesContent":["const textArea = document.createElement('textarea');\nexport default function(encoded) {\n  textArea.innerHTML = encoded;\n  return textArea.value;\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport { Button, Row, Col, FormControl } from 'react-bootstrap';\n\nimport { format, symbols } from 'currencyformatter.js';\nimport decode from './decode.js';\n\nconst currencyCodes = Object.keys(symbols);\n\nclass LineItemList extends Component {\n  onLineItemDescriptionChange(index, event) {\n    this.props.onLineItemDescriptionChange({\n      index: index,\n      newDescription: event.target.value,\n    });\n  }\n\n  onLineItemQuantityChange(index, event) {\n    this.props.onLineItemQuantityChange({\n      index: index,\n      newQuantity: event.target.value,\n    });\n  }\n\n  onLineItemRateChange(index, event) {\n    this.props.onLineItemRateChange({\n      index: index,\n      newRate: event.target.value,\n    });\n  }\n\n  onLineItemDeleteClick(index) {\n    this.props.onLineItemDeleteClick({\n      index: index,\n    });\n  }\n\n  getLineItemsTotal(lineItems) {\n    return lineItems.reduce((sum, lineItem) => {\n      return sum + lineItem.quantity * lineItem.rate;\n    }, 0);\n  }\n\n  renderLineItemRow(lineItem, index) {\n    return (\n      <Row key={index}>\n        <Col sm={8}>\n          <FormControl\n            type=\"text\"\n            value={lineItem.description}\n            onChange={this.onLineItemDescriptionChange.bind(this, index)}\n          />\n        </Col>\n        <Col sm={1} style={{ paddingLeft: '7px', paddingRight: '7px' }}>\n          <FormControl\n            type=\"number\"\n            step=\"0.1\"\n            value={lineItem.quantity}\n            onChange={this.onLineItemQuantityChange.bind(this, index)}\n          />\n        </Col>\n        <Col sm={1} style={{ paddingLeft: '7px', paddingRight: '7px' }}>\n          <FormControl\n            type=\"number\"\n            value={lineItem.rate}\n            onChange={this.onLineItemRateChange.bind(this, index)}\n          />\n        </Col>\n        <Col sm={1}>\n          {decode(\n            format(lineItem.quantity * lineItem.rate, {\n              currency: this.props.currency\n            })\n          )}\n        </Col>\n        <Col sm={1}>\n          <Button\n            bsStyle=\"danger\"\n            onClick={this.onLineItemDeleteClick.bind(this, index)}\n          >\n            X\n          </Button>\n        </Col>\n      </Row>\n    );\n  }\n\n  render() {\n    let lineItems = this.props.lineItems;\n    let lineItemRows = lineItems.map(this.renderLineItemRow.bind(this));\n    let lineItemsTotal = this.getLineItemsTotal(lineItems);\n    return (\n      <div>\n        <Row>\n          <Col sm={8}>Item</Col>\n          <Col sm={1}>Quantity</Col>\n          <Col sm={1}>Rate</Col>\n          <Col sm={1}>Amount</Col>\n          <Col sm={1} />\n        </Row>\n        {lineItemRows}\n        <Row>\n          <Col sm={8}>\n            <Button bsStyle=\"success\" onClick={this.props.onLineItemAddClick}>\n              + Add Line Item\n            </Button>\n          </Col>\n          <Col sm={1} />\n          <Col sm={1}>Total</Col>\n          <Col sm={1}>\n            {decode(format(lineItemsTotal, { currency: this.props.currency }))}\n          </Col>\n          <Col sm={1} />\n        </Row>\n      </div>\n    );\n  }\n}\n\nLineItemList.propTypes = {\n  currency: PropTypes.oneOf(currencyCodes),\n  lineItems: PropTypes.array,\n  onLineItemDescriptionChange: PropTypes.func,\n  onLineItemQuantityChange: PropTypes.func,\n  onLineItemRateChange: PropTypes.func,\n  onLineItemDeleteClick: PropTypes.func,\n};\n\nLineItemList.defaultProps = {\n  lineItems: [],\n};\n\nexport default LineItemList;\n","const pdfMake = window.pdfMake;\n\nexport function saveInvoicePDF(params) {\n  if (params.imageLogo) {\n    console.log('imageLogo', params.imageLogo);\n    let fileReader = new FileReader();\n    fileReader.addEventListener(\n      'load',\n      onDataURLLoaded.bind(null, params, fileReader),\n      false,\n    );\n    fileReader.readAsDataURL(params.imageLogo);\n  } else {\n    createPDFFromParams(params);\n  }\n}\n\n// Private functions\nfunction onDataURLLoaded(params, fileReader) {\n  // Set imageLogo to data URI of file\n  params.imageLogo = fileReader.result;\n  createPDFFromParams(params);\n}\n\nfunction createPDFFromParams(params) {\n  let docDefinition = buildDocDefinition(params);\n  pdfMake.createPdf(docDefinition).open();\n}\n\nfunction buildDocDefinition(params) {\n  let notesAndTerms = buildNotesAndTerms(params);\n  console.log('notesAndTerms', notesAndTerms);\n  return {\n    content: [\n      buildHeaderInformation(params),\n      buildLineItemsTable(params),\n      buildTotal(params),\n      ...buildNotesAndTerms(params),\n    ],\n  };\n}\n\nfunction buildHeaderInformation(params) {\n  const optionalDataKeys = [];\n  const optionalDataValues = [];\n\n  Object.entries({\n    Date: params.date,\n    'Payment Terms': params.paymentTerms,\n    'Due Date': params.dueDate,\n  }).forEach(([key, value]) => {\n    if (value) {\n      optionalDataKeys.push(key);\n      optionalDataValues.push(value);\n    }\n  });\n\n  return {\n    columns: [\n      {\n        stack: [\n          ...buildImageLogo(params),\n          {\n            text: params.fromName,\n            margin: [0, 30, 0, 30],\n          },\n          {\n            text: 'Bill To',\n            margin: [0, 0, 0, 0],\n          },\n          {\n            text: params.toName,\n          },\n        ],\n      },\n      {\n        stack: [\n          {\n            text: 'INVOICE',\n            fontSize: 25,\n          },\n          {\n            text: `# ${params.invoiceNumber}`,\n            fontSize: 15,\n            margin: [0, 0, 0, 30],\n          },\n          {\n            columns: [\n              {\n                width: 50,\n                text: '',\n              },\n              {\n                width: '*',\n                columns: [\n                  {\n                    stack: optionalDataKeys,\n                    alignment: 'right',\n                  },\n                  {\n                    stack: optionalDataValues,\n                    alignment: 'right',\n                  },\n                ],\n              },\n            ],\n          },\n        ],\n        alignment: 'right',\n      },\n    ],\n    // optional space between columns\n    columnGap: 10,\n    margin: [0, 0, 0, 30],\n  };\n}\n\nfunction buildLineItemsTable(params) {\n  let lineItemRows = params.lineItems.map(buildLineItem(params));\n  return {\n    table: {\n      widths: ['*', '11%', '11%', '18%'],\n      headerRows: 1,\n      body: [\n        [\n          'Item',\n          { text: 'Quantity', alignment: 'right' },\n          { text: 'Rate', alignment: 'right' },\n          { text: 'Amount', alignment: 'right' },\n        ],\n        ...lineItemRows,\n      ],\n    },\n    layout: 'lightHorizontalLines',\n  };\n}\n\nfunction buildTotal(params) {\n  let total = params.lineItems.reduce((sum, lineItem) => {\n    return sum + lineItem.quantity * lineItem.rate;\n  }, 0);\n  return {\n    table: {\n      widths: ['*', '18%'],\n      body: [\n        [\n          {\n            text: 'Total',\n            alignment: 'right',\n          },\n          {\n            text: `${total.toFixed(2)} ${params.currency}`,\n            alignment: 'right',\n          },\n        ],\n      ],\n    },\n    layout: 'noBorders',\n    margin: [0, 0, 0, 30],\n  };\n}\n\n// Returns an array\nfunction buildNotesAndTerms(params) {\n  let result = [];\n  console.log('params', params);\n  if (params.notes) {\n    result = result.concat([\n      { text: 'Notes' },\n      { text: params.notes, margin: [0, 0, 0, 30] },\n    ]);\n  }\n  if (params.terms) {\n    result = result.concat([\n      { text: 'Terms' },\n      { text: params.terms, margin: [0, 0, 0, 30] },\n    ]);\n  }\n  return result;\n}\n\nfunction buildLineItem(params) {\n  return function buildLineItemCurried(lineItem) {\n    return [\n      lineItem.description,\n      { text: String(lineItem.quantity), alignment: 'right' },\n      { text: `${lineItem.rate} ${params.currency}`, alignment: 'right' },\n      {\n        text: `${(lineItem.quantity * lineItem.rate).toFixed(2)} ${\n          params.currency\n        }`,\n        alignment: 'right',\n      },\n    ];\n  };\n}\n\nfunction buildImageLogo(params) {\n  let result = [];\n  if (params.imageLogo) {\n    result.push({\n      image: params.imageLogo,\n    });\n  }\n  return result;\n}\n","import React, { useState } from 'react';\nimport {\n  Button,\n  Col,\n  ControlLabel,\n  Form,\n  FormControl,\n  FormGroup,\n  PageHeader,\n} from 'react-bootstrap';\nimport { symbols } from 'currencyformatter.js';\nimport dequal from 'dequal';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nimport './App.css';\nimport LineItemList from './LineItemList.js';\nimport { saveInvoicePDF } from './PDFService.js';\nimport useLocalStorage from './useLocalStorage.ts';\n\nconst currencyCodes = Object.keys(symbols);\n\nconst emptyState = {\n  invoiceNumber: '',\n  fromName: '',\n  // imageLogo: null,\n  // paymentTerms: '',\n  currency: 'CAD',\n  toName: '',\n  date: '',\n  // dueDate: '',\n  lineItems: [],\n  notes: '',\n  terms: '',\n};\n\nfunction App() {\n  const [editedInvoice, setEditedInvoice] = useState(emptyState);\n  const [historyStates, setHistoryStates] = useLocalStorage(\n    'invoiceHistory',\n    [],\n  );\n\n  function onFieldValueChange(propertyName, event) {\n    let newVal = event.target.value;\n    let stateUpdate = {};\n    stateUpdate[propertyName] = newVal;\n    setEditedInvoice({\n      ...editedInvoice,\n      ...stateUpdate,\n    });\n  }\n  function onLineItemDescriptionChange(params) {\n    let lineItems = editedInvoice.lineItems;\n    let lineItem = lineItems[params.index];\n    lineItem.description = params.newDescription;\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemQuantityChange(params) {\n    let lineItems = editedInvoice.lineItems;\n    let lineItem = lineItems[params.index];\n    lineItem.quantity = params.newQuantity;\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemRateChange(params) {\n    let lineItems = editedInvoice.lineItems;\n    let lineItem = lineItems[params.index];\n    lineItem.rate = params.newRate;\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemDeleteClick(params) {\n    let lineItems = editedInvoice.lineItems;\n    lineItems.splice(params.index, 1);\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  function onLineItemAddClick() {\n    let lineItems = editedInvoice.lineItems;\n    lineItems.push({\n      description: '',\n      quantity: 0,\n      rate: 0,\n    });\n    setEditedInvoice({\n      ...editedInvoice,\n      lineItems: lineItems,\n    });\n  }\n\n  \n  function onClearFormClick() {\n    setEditedInvoice(emptyState);\n  }\n\n\n  function onSubmitClick() {\n    saveInvoicePDF(editedInvoice);\n    if (!dequal(editedInvoice, historyStates[0])) {\n      setHistoryStates([editedInvoice, ...historyStates.slice(0, 24)]);\n    }\n  }\n  return (\n    \n    <div className=\"App\">\n      <div className=\"container\">\n        <div className=\"row\">\n        <PageHeader>INVOICE</PageHeader>\n        <div className=\"App-invoice col-12\">\n          <Form horizontal>\n            <FormGroup controlId=\"invoiceNumber\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Invoice #\n              </Col>\n              <Col sm={4}>\n                <FormControl\n                  type=\"text\"\n                  value={editedInvoice.invoiceNumber}\n                  onChange={onFieldValueChange.bind(this, 'invoiceNumber')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"fromName\">\n              <Col componentClass={ControlLabel} sm={2}>\n                MLSC #\n              </Col>\n              <Col sm={4}>\n                <FormControl\n                  componentClass=\"textarea\"\n                  rows=\"1\"\n                  placeholder=\"Who is this invoice from?\"\n                  value={editedInvoice.fromName}\n                  onChange={onFieldValueChange.bind(this, 'fromName')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"toName\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Property Address\n              </Col>\n              <Col sm={4}>\n                <FormControl\n                  componentClass=\"textarea\"\n                  rows=\"3\"\n                  placeholder=\"Who is this invoice to?\"\n                  value={editedInvoice.toName}\n                  onChange={onFieldValueChange.bind(this, 'toName')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"date\">\n              <Col componentClass={ControlLabel} sm={2}>\n                 Deposit Date\n              </Col>\n              <Col sm={4}>\n                <FormControl\n                  type=\"date\"\n                  value={editedInvoice.date}\n                  onChange={onFieldValueChange.bind(this, 'date')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"dueDate\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Check Date\n              </Col>\n              <Col sm={4}>\n                <FormControl\n                  type=\"date\"\n                  value={editedInvoice.dueDate}\n                  onChange={onFieldValueChange.bind(this, 'dueDate')}\n                />\n              </Col>\n            </FormGroup>\n            <FormGroup controlId=\"currency\">\n              <Col componentClass={ControlLabel} sm={2}>\n                Currency\n              </Col>\n              <Col sm={4}>\n                <FormControl\n                  componentClass=\"select\"\n                  placeholder=\"Select currency\"\n                  defaultValue={editedInvoice.currency}\n                  onChange={onFieldValueChange.bind(this, 'currency')}\n                >\n                  {currencyCodes.map((currencyCode, index) => (\n                    <option value={currencyCode} key={index}>\n                      {currencyCode}\n                    </option>\n                  ))}\n                </FormControl>\n              </Col>\n            </FormGroup>\n            </Form>\n        </div>\n        <div className=\"App\">\n            <div className=\"row\">\n            <Form horizontal>\n            <LineItemList\n              lineItems={editedInvoice.lineItems}\n              currency={editedInvoice.currency}\n              onLineItemDescriptionChange={onLineItemDescriptionChange}\n              onLineItemQuantityChange={onLineItemQuantityChange}\n              onLineItemRateChange={onLineItemRateChange}\n              onLineItemDeleteClick={onLineItemDeleteClick}\n              onLineItemAddClick={onLineItemAddClick}\n            />\n\n            \n            <FormGroup>\n              <ControlLabel>Notes</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                placeholder=\"Notes - any relevant information not already covered\"\n                value={editedInvoice.notes}\n                onChange={onFieldValueChange.bind(this, 'notes')}\n              />\n            </FormGroup>\n            <FormGroup>\n              <ControlLabel>Terms</ControlLabel>\n              <FormControl\n                componentClass=\"textarea\"\n                placeholder=\"Terms and conditions - late fees, payment methods, delivery schedule\"\n                value={editedInvoice.terms}\n                onChange={onFieldValueChange.bind(this, 'terms')}\n              />\n            </FormGroup>\n            </Form>\n        </div>\n        </div>\n        </div>\n        <div className=\"Footer-Container\">\n          <div className=\"Footer\">\n            <Col sm={2}>\n              <Button onClick={onClearFormClick}>Clear Form</Button>\n            </Col>\n            <Col smOffset={8} sm={2}>\n              <Button onClick={onSubmitClick} bsStyle=\"primary\">\n                Create Invoice\n              </Button>\n            </Col>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// From https://github.com/dance2die/react-use-localstorage\nimport React from 'react';\n\nexport default function useLocalStorage(\n  key: string,\n  initialValue: string = '',\n): [string, any] {\n  const [item, setValue] = React.useState(() => {\n    let value;\n\n    // Try to parse the value and fall back to value\n    try {\n      value = JSON.parse(localStorage.getItem(key) || '');\n    } catch (err) {\n      value = localStorage.getItem(key);\n    }\n\n    value = value || initialValue;\n    localStorage.setItem(\n      key,\n      typeof value === 'string' ? value : JSON.stringify(value),\n    );\n    return value;\n  });\n\n  const setItem = (newValue: any) => {\n    setValue(newValue);\n    localStorage.setItem(\n      key,\n      typeof newValue === 'string' ? newValue : JSON.stringify(newValue),\n    );\n  };\n\n  return [item, setItem];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}